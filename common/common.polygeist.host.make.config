
### OPTIONS ###

API = CUDA
OPTLEVEL = -O2
TARGET = GPU
CONFIG = 0

OUTPUT_MLIR = 0
OUTPUT_MLIR_LLVM_DIALECT = 0
OUTPUT_LLVMIR = 0

POLYGEIST_DEBUG = 0

CLANG_NO_OPAQUE_POINTERS = 1

POLYGEIST_ALTERNATIVES_MODE = static

### OPTIONS END ###


ifeq ($(POLYGEIST_DEBUG),1)
    POLYGEIST_DIR = $(POLYGEIST_DIR_DEBUG)
    POLYGEIST_LLVM_DIR = $(POLYGEIST_LLVM_DIR_DEBUG)
else
    POLYGEIST_DIR = $(POLYGEIST_DIR_RELEASE)
    POLYGEIST_LLVM_DIR = $(POLYGEIST_LLVM_DIR_RELEASE)
endif

POLYGEIST_VER := $(shell (cd $(POLYGEIST_DIR) && git show --pretty=format:"%h" --no-patch))

POLYGEIST_MEMREF_ABI_0 = #--memref-abi=0
POLYGEIST_LLVM_STRUCT_ABI_0 = --struct-abi=0

ifeq ($(API),CUDA)
    CUDA_SAMPLES_PATH = $(CUDA_SAMPLES_PATH_)
else
    CUDA_SAMPLES_PATH = $(HIPIFIED_CUDA_SAMPLES_PATH_)
endif


ifeq ($(CONFIG),0)
    POLYGEIST_MEMREF_ABI_0 =
    POLYGEIST_LLVM_STRUCT_ABI_0 =

    CC = $(POLYGEIST_LLVM_DIR)/bin/clang
    CXX = $(POLYGEIST_LLVM_DIR)/bin/clang++
    NVCC = $(POLYGEIST_LLVM_DIR)/bin/clang++
    LINKER = clang

    CC_FLAGS = $(OPTLEVEL) -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -resource-dir=$(POLYGEIST_LLVM_DIR)/lib/clang/16.0.0/ -fopenmp -I$(CUDA_PATH)/include/
    ifeq ($(API),CUDA)
        CC_FLAGS += -I$(CUDA_PATH)/include/
    else ifeq ($(API),HIP)
        CC_FLAGS += -I$(ROCM_PATH)/include/ -D_MY_IS_HIP
    endif

    CXX_FLAGS := $(CC_FLAGS)
    NVCC_FLAGS := $(CC_FLAGS)
    ifeq ($(API),CUDA)
        NVCC_FLAGS += --cuda-gpu-arch=$(CUDA_GPU_ARCH) --cuda-path=$(CUDA_PATH)/
    else ifeq ($(API),HIP)
        NVCC_FLAGS += --offload-arch=$(AMD_GPU_ARCH) --rocm-path=$(ROCM_PATH)/
        NVCC += -x hip
    endif
    LINKER_FLAGS = $(OPTLEVEL) -ldl -lrt -lpthread -lm -L$(POLYGEIST_LLVM_DIR)/lib -lstdc++ -fopenmp -fopenmp=libomp
    ifeq ($(API),CUDA)
        LINKER_FLAGS += -L/usr/local/cuda/lib64/ -lcudart_static -lcuda
    else ifeq ($(API),HIP)
        LINKER_FLAGS += -L/opt/rocm/lib/ -lamdhip64
    endif

    ifeq ($(CLANG_NO_OPAQUE_POINTERS),1)
        CC_FLAGS += -Xclang -no-opaque-pointers
        CXX_FLAGS += -Xclang -no-opaque-pointers
        NVCC_FLAGS += -Xclang -no-opaque-pointers
    endif

    ifeq ($(API),CUDA)
        COMPILER_NAME=clang.gpu
    else ifeq ($(API),HIP)
        COMPILER_NAME=clang.hip.gpu
    endif

else
    CC_FLAGS =
    CC = $(POLYGEIST_DIR)/bin/cgeist

    ifeq ($(TARGET),CPU)
        # CPU configs
        ifeq ($(CONFIG),1)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute"
        COMPILER_NAME=polygeist
        endif

        ifeq ($(CONFIG),2)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut"
        COMPILER_NAME=polygeist.mincut
        endif

        ifeq ($(CONFIG),3)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=0 -raise-scf-to-affine
        COMPILER_NAME=polygeist.mincut.raise-scf-to-affine.scal-rep=0
        endif

        ifeq ($(CONFIG),4)
        #CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=1 -raise-scf-to-affine
        #COMPILER_NAME=polygeist.mincut.raise-scf-to-affine.scal-rep=1
        endif

        ifeq ($(CONFIG),5)
        #CC_FLAGS += --function=* --cuda-lower --cpuify="continuation"
        #COMPILER_NAME=polygeist.continuation
        endif

        ifeq ($(CONFIG),6)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut" -openmp-opt=0
        COMPILER_NAME=polygeist.mincut.openmp-opt=0
        endif

        ifeq ($(CONFIG),7)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut" -barrier-opt=0
        COMPILER_NAME=polygeist.mincut.barrier-opt=0
        endif

        ifeq ($(CONFIG),8)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut" -barrier-opt=0 -scal-rep=0 -raise-scf-to-affine
        COMPILER_NAME=polygeist.mincut.raise-scf-to-affine.scal-rep=0.barrier-opt=0
        endif

        ifeq ($(CONFIG),9)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut" --inner-serialize=1
        COMPILER_NAME=polygeist.mincut.inner-serialize=1
        endif

        ifeq ($(CONFIG),10)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=0 -raise-scf-to-affine --inner-serialize=1
        COMPILER_NAME=polygeist.mincut.inner-serialize=1.raise-scf-to-affine.scal-rep=0
        endif

        ifeq ($(CONFIG),11)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut.ifhoist" -scal-rep=0 -raise-scf-to-affine --inner-serialize=1
        COMPILER_NAME=polygeist.mincut.ifhoist.inner-serialize=1.raise-scf-to-affine.scal-rep=0
        endif

        ifeq ($(CONFIG),12)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut.ifsplit" -scal-rep=0 -raise-scf-to-affine --inner-serialize=1
        COMPILER_NAME=polygeist.mincut.ifsplit.inner-serialize=1.raise-scf-to-affine.scal-rep=0
        endif

        ifeq ($(CONFIG),50)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.ifhoist"
        COMPILER_NAME=polygeist.ifhoist
        endif

        ifeq ($(CONFIG),51)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut.ifhoist"
        COMPILER_NAME=polygeist.mincut.ifhoist
        endif

        ifeq ($(CONFIG),52)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.ifsplit"
        COMPILER_NAME=polygeist.ifsplit
        endif

        ifeq ($(CONFIG),53)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut.ifsplit"
        COMPILER_NAME=polygeist.mincut.ifsplit
        endif

        ifeq ($(CONFIG),60)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=0 -raise-scf-to-affine --early-inner-serialize
        COMPILER_NAME=polygeist.mincut.early-inner-serialize.raise-scf-to-affine.scal-rep=0
        endif

        ifeq ($(CONFIG),70)
        CC_FLAGS += --function=* --cuda-lower --cpuify="distribute.mincut" -scal-rep=0 -raise-scf-to-affine --inner-serialize=1 -parallel-licm=0
        COMPILER_NAME=polygeist.mincut.inner-serialize=1.raise-scf-to-affine.scal-rep=0.npl
        endif

        # common options

        CC += -fopenmp $(OPTLEVEL)

        CXX = $(CC)
        NVCC = $(CC)
        LINKER = $(POLYGEIST_LLVM_DIR)/bin/clang


        LINKER_FLAGS = -L$(CPUCUDA_BUILD_DIR)/src/ -lcpucudart -ldl -lrt -lpthread -lm -L$(POLYGEIST_LLVM_DIR)/lib -lstdc++ -fopenmp $(OPTLEVEL) -fopenmp=libomp

        CC_FLAGS += $(OPTLEVEL) -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -resource-dir=$(POLYGEIST_LLVM_DIR)/lib/clang/16.0.0/ -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -I$(CUDA_PATH)/include/
        CXX_FLAGS := $(CC_FLAGS)
        NVCC_FLAGS := $(CC_FLAGS) --cuda-gpu-arch=sm_60 --cuda-path=$(CUDA_PATH)/

        COMPILER_NAME := $(POLYGEIST_VER).$(COMPILER_NAME)
    endif
    # If either CUDA or AMDGPU
    ifneq ($(filter $(TARGET),CUDA AMDGPU),)
        # GPU configs

        ifeq ($(CONFIG),1)
        CC_FLAGS += --function=* #--memref-abi=0
        COMPILER_NAME=polygeist.gpu
        endif

        ifeq ($(CONFIG),2)
        CC_FLAGS += --function=* -scal-rep=0 -raise-scf-to-affine
        COMPILER_NAME=polygeist.gpu.raise-scf-to-affine.scal-rep=0
        endif

        ifeq ($(CONFIG),3)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=0
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0
        endif

        ifeq ($(CONFIG),4)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1
        endif

        ifeq ($(CONFIG),5)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_wrappers
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=block_thread_wrappers
        endif

        ifeq ($(CONFIG),6)
        CC_FLAGS += --function=* --emit-gpu-kernel-launch-bounds=0
        COMPILER_NAME=polygeist.gpu.emit-gpu-kernel-launch-bounds=0
        endif

        ifeq ($(CONFIG),7)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 --enable-buffer-elim=0
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.enable-buffer-elim=0
        endif

        ifeq ($(CONFIG),8)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_noops
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=block_thread_noops
        endif

        ifeq ($(CONFIG),9)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=thread_noop
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=thread_noop
        endif

        ifeq ($(CONFIG),10)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=thread_noop --enable-buffer-elim=0
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=thread_noop.enable-buffer-elim=0
        endif

        ifeq ($(CONFIG),11)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=thread_noop --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=thread_noop.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1
        endif

        ifeq ($(CONFIG),12)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_noops --gpu-kernel-emit-coarsened-alternatives=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=block_thread_noops.gpu-kernel-emit-coarsened-alternatives=1
        endif

        ifeq ($(CONFIG),13)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1
        endif

        ifeq ($(CONFIG),14)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_noops --enable-buffer-elim=0
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.enable-buffer-elim=0.gpu-kernel-structure-mode=block_thread_noops
        endif

        ifeq ($(CONFIG),15)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_noops --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=block_thread_noops.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1
        endif

        ifeq ($(CONFIG),16)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_wrappers --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=block_thread_wrappers.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1
        endif

        ifeq ($(CONFIG),111)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=thread_noop --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1 --gpu-kernel-enable-block-coarsening=0
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=thread_noop.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1.gpu-kernel-enable-block-coarsening=0
        endif

        ifeq ($(CONFIG),112)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_noops --gpu-kernel-emit-coarsened-alternatives=1 --gpu-kernel-enable-block-coarsening=0
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=block_thread_noops.gpu-kernel-emit-coarsened-alternatives=1.gpu-kernel-enable-block-coarsening=0
        endif

        ifeq ($(CONFIG),113)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1 --gpu-kernel-enable-block-coarsening=0
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1.gpu-kernel-enable-block-coarsening=0
        endif

        ifeq ($(CONFIG),211)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=thread_noop --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1 --gpu-kernel-enable-block-coarsening=0 --gpu-kernel-enable-coalescing-friendly-unroll=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=thread_noop.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1.gpu-kernel-enable-block-coarsening=0.gpu-kernel-enable-coalescing-friendly-unroll=1
        endif

        ifeq ($(CONFIG),212)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_noops --gpu-kernel-emit-coarsened-alternatives=1 --gpu-kernel-enable-block-coarsening=0 --gpu-kernel-enable-coalescing-friendly-unroll=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=block_thread_noops.gpu-kernel-emit-coarsened-alternatives=1.gpu-kernel-enable-block-coarsening=0.gpu-kernel-enable-coalescing-friendly-unroll=1
        endif

        ifeq ($(CONFIG),213)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1 --gpu-kernel-enable-block-coarsening=0 --gpu-kernel-enable-coalescing-friendly-unroll=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1.gpu-kernel-enable-block-coarsening=0.gpu-kernel-enable-coalescing-friendly-unroll=1
        endif

        ifeq ($(CONFIG),311)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=thread_noop --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1 --gpu-kernel-enable-coalescing-friendly-unroll=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=thread_noop.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1.gpu-kernel-enable-coalescing-friendly-unroll=1
        endif

        ifeq ($(CONFIG),312)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_noops --gpu-kernel-emit-coarsened-alternatives=1 --gpu-kernel-enable-coalescing-friendly-unroll=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.gpu-kernel-structure-mode=block_thread_noops.gpu-kernel-emit-coarsened-alternatives=1.gpu-kernel-enable-coalescing-friendly-unroll=1
        endif

        ifeq ($(CONFIG),313)
        CC_FLAGS += --function=* -cuda-lower -scal-rep=0 -raise-scf-to-affine -parallel-licm=1 --enable-buffer-elim=0 --gpu-kernel-emit-coarsened-alternatives=1 --gpu-kernel-enable-coalescing-friendly-unroll=1
        COMPILER_NAME=polygeist.gpu.parallel-lower.raise-scf-to-affine.scal-rep=0.parallel-licm=1.enable-buffer-elim=0.gpu-kernel-emit-coarsened-alternatives=1.gpu-kernel-enable-coalescing-friendly-unroll=1
        endif

        # common options
        CC_FLAGS += $(OPTLEVEL) #-fopenmp

    endif
    ifeq ($(TARGET),CUDA)
        CC_FLAGS += -emit-cuda

        CXX = $(CC)
        NVCC = $(CC)
        LINKER = $(POLYGEIST_LLVM_DIR)/bin/clang

        POLYGEIST_LLVM_ABI = #--memref-abi=0

        LINKER_FLAGS = -L/usr/local/cuda/lib64/ -lcudart_static -lcuda -ldl -lrt -lpthread -lm -L$(POLYGEIST_LLVM_DIR)/lib -lstdc++ $(OPTLEVEL) -fopenmp -fopenmp=libomp

        CC_FLAGS += $(OPTLEVEL) -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -resource-dir=$(POLYGEIST_LLVM_DIR)/lib/clang/16.0.0/ -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -I$(CUDA_PATH)/include/
        CXX_FLAGS := $(CC_FLAGS)
        NVCC_FLAGS := $(CC_FLAGS) --cuda-gpu-arch=$(CUDA_GPU_ARCH) --cuda-path=$(CUDA_PATH)/

        COMPILER_NAME := $(POLYGEIST_VER).$(COMPILER_NAME)
    endif
    ifeq ($(TARGET),AMDGPU)
        CC_FLAGS += -emit-rocm

        CXX = $(CC)
        NVCC = $(CC)
        LINKER = $(POLYGEIST_LLVM_DIR)/bin/clang

        POLYGEIST_LLVM_ABI = #--memref-abi=0

        LINKER_FLAGS = -L/opt/rocm/lib/ -lamdhip64 -ldl -lrt -lpthread -lm -L$(POLYGEIST_LLVM_DIR)/lib -lstdc++ $(OPTLEVEL) -fopenmp -fopenmp=libomp

        CC_FLAGS += $(OPTLEVEL) -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -resource-dir=$(POLYGEIST_LLVM_DIR)/lib/clang/16.0.0/ -I$(POLYGEIST_LLVM_DIR)/projects/openmp/runtime/src/ -I$(CUDA_PATH)/include/
        CXX_FLAGS := $(CC_FLAGS)
        NVCC_FLAGS := $(CC_FLAGS) --cuda-gpu-arch=$(CUDA_GPU_ARCH) --amd-gpu-arch=$(AMD_GPU_ARCH) --cuda-path=$(CUDA_PATH)/ --rocm-path=$(ROCM_PATH)/

        COMPILER_NAME := $(POLYGEIST_VER).amdgpu.$(COMPILER_NAME)
    endif

    ifeq ($(OUTPUT_MLIR),1)
        CC_FLAGS += -S
        CXX_FLAGS += -S
        NVCC_FLAGS += -S
        LINKER = bash -c 'for obj in $$(find . -name \*.o); do echo $$obj; mv $$obj $$obj.conf$(CONFIG).mlir; done'; true
    endif

    ifeq ($(OUTPUT_MLIR_LLVM_DIALECT),1)
        CC += -S --emit-llvm-dialect
        CXX += -S --emit-llvm-dialect
        NVCC += -S --emit-llvm-dialect
        LINKER = bash -c 'for obj in $$(find . -name \*.o); do echo $$obj; mv $$obj $$obj.conf$(CONFIG).llvmir.mlir; done'; true
    endif

    ifeq ($(POLYGEIST_ALTERNATIVES_MODE),static)
        NVCC_FLAGS += --polygeist-alternatives-mode=static
    else ifeq ($(POLYGEIST_ALTERNATIVES_MODE),pgo_prof)
        NVCC_FLAGS += --polygeist-alternatives-mode=pgo_prof
        COMPILER_NAME := $(COMPILER_NAME).pgo_prof
    else ifeq ($(POLYGEIST_ALTERNATIVES_MODE),pgo_opt)
        NVCC_FLAGS += --polygeist-alternatives-mode=pgo_opt
        COMPILER_NAME := $(COMPILER_NAME).pgo_opt
    endif

endif

ifeq ($(OUTPUT_LLVMIR),1)
    CC_FLAGS += -S -emit-llvm
    CXX_FLAGS += -S -emit-llvm
    NVCC_FLAGS += -S -emit-llvm
    LINKER = bash -c 'for obj in $$(find . -name \*.o); do echo $$obj; mv $$obj $$obj.conf$(CONFIG).ll; done'; true
endif
