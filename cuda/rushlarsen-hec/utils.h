#ifndef UTILS_H
#define UTILS_H

enum state {
  STATE_Xr1,
  STATE_Xr2,
  STATE_Xs,
  STATE_m,
  STATE_h,
  STATE_j,
  STATE_d,
  STATE_f,
  STATE_f2,
  STATE_fCass,
  STATE_s,
  STATE_r,
  STATE_Ca_SR,
  STATE_Ca_i,
  STATE_Ca_ss,
  STATE_R_prime,
  STATE_Na_i,
  STATE_V,
  STATE_K_i,
  NUM_STATES,
};

void init_state_values(double* states, int n);

enum parameter {
  PARAM_P_kna,
  PARAM_g_K1,
  PARAM_g_Kr,
  PARAM_g_Ks,
  PARAM_g_Na,
  PARAM_g_bna,
  PARAM_g_CaL,
  PARAM_g_bca,
  PARAM_g_to,
  PARAM_K_mNa,
  PARAM_K_mk,
  PARAM_P_NaK,
  PARAM_K_NaCa,
  PARAM_K_sat,
  PARAM_Km_Ca,
  PARAM_Km_Nai,
  PARAM_alpha,
  PARAM_gamma,
  PARAM_K_pCa,
  PARAM_g_pCa,
  PARAM_g_pK,
  PARAM_Buf_c,
  PARAM_Buf_sr,
  PARAM_Buf_ss,
  PARAM_Ca_o,
  PARAM_EC,
  PARAM_K_buf_c,
  PARAM_K_buf_sr,
  PARAM_K_buf_ss,
  PARAM_K_up,
  PARAM_V_leak,
  PARAM_V_rel,
  PARAM_V_sr,
  PARAM_V_ss,
  PARAM_V_xfer,
  PARAM_Vmax_up,
  PARAM_k1_prime,
  PARAM_k2_prime,
  PARAM_k3,
  PARAM_k4,
  PARAM_max_sr,
  PARAM_min_sr,
  PARAM_Na_o,
  PARAM_Cm,
  PARAM_F,
  PARAM_R,
  PARAM_T,
  PARAM_V_c,
  PARAM_stim_amplitude,
  PARAM_stim_duration,
  PARAM_stim_period,
  PARAM_stim_start,
  PARAM_K_o,
  NUM_PARAMS,
};

void init_parameters_values(double* parameters, int n);

void forward_rush_larsen(double* states, const double t, const double dt,
                         const double* parameters, const int n);
#endif

